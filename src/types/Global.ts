/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/users/{userId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getUserById"];
    put: operations["updateUser"];
    post?: never;
    delete: operations["deleteUser"];
    options?: never;
    head?: never;
    patch: operations["patchUser"];
    trace?: never;
  };
  "/api/user-ecommerce/{EcommerceId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: operations["updateEcommerce"];
    post?: never;
    delete: operations["deleteEcommerce"];
    options?: never;
    head?: never;
    patch: operations["patchEcommerce"];
    trace?: never;
  };
  "/api/ecommerce/{EcommerceId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: operations["updateEcommerce_1"];
    post?: never;
    delete: operations["deleteEcommerce_1"];
    options?: never;
    head?: never;
    patch: operations["patchEcommerce_1"];
    trace?: never;
  };
  "/auth/register": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["register"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/auth/login": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["authenticate"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/woocommerce/{ecommerceId}/products": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["index"];
    put?: never;
    post: operations["create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/woocommerce/{ecommerceId}/products/{productId}/variations": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["index_1"];
    put?: never;
    post: operations["create_1"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/woocommerce/{ecommerceId}/products/{productId}/variations/batch": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["batch"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/woocommerce/{ecommerceId}/products/batch": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["batch_1"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/woocommerce/{ecommerceId}/products/attributes": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["index_2"];
    put?: never;
    post: operations["create_2"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/woocommerce/{ecommerceId}/products/attributes/batch": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["batch_2"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/woocommerce/{ecommerceId}/media": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["index_3"];
    put?: never;
    post: operations["create_3"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getAllUsers"];
    put?: never;
    post: operations["addNewUser"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user-ecommerce": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getAllEcommerces"];
    put?: never;
    post: operations["addNewEcommerce"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/ecommerce": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getAllEcommerces_1"];
    put?: never;
    post: operations["addNewEcommerce_1"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/woocommerce/{ecommerceId}/products/{productId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["show"];
    put?: never;
    post?: never;
    delete: operations["delete"];
    options?: never;
    head?: never;
    patch: operations["patch"];
    trace?: never;
  };
  "/api/woocommerce/{ecommerceId}/products/{productId}/variations/{variationId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["show_1"];
    put?: never;
    post?: never;
    delete: operations["delete_1"];
    options?: never;
    head?: never;
    patch: operations["patch_1"];
    trace?: never;
  };
  "/api/woocommerce/{ecommerceId}/products/attributes/{attributeId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["show_2"];
    put?: never;
    post?: never;
    delete: operations["delete_2"];
    options?: never;
    head?: never;
    patch: operations["patch_2"];
    trace?: never;
  };
  "/api/woocommerce/{ecommerceId}/media/{productId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["show_3"];
    put?: never;
    post?: never;
    delete: operations["delete_3"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user-ecommerce/{ecommerceId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getEcommerceById"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/ecommerce/{ecommerceId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getEcommerceById_1"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    UpdateUserRequest: {
      name: string;
      roles: string;
      active: boolean;
    };
    ApiResponseUserResponse: {
      success?: boolean;
      data?: components["schemas"]["UserResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    UserResponse: {
      /** Format: int32 */
      id?: number;
      name?: string;
      email?: string;
      roles?: string;
      active?: boolean;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
    };
    CreateOrUpdateUserEcommerceRequest: {
      /** Format: int32 */
      userId: number;
      /** Format: int32 */
      ecommerceId: number;
      apiPublic?: string;
      apiSecret?: string;
      appUsername?: string;
      appPassword?: string;
    };
    ApiResponseUserEcommerceResponse: {
      success?: boolean;
      data?: components["schemas"]["UserEcommerceResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    EcommerceResponse: {
      /** Format: int32 */
      id?: number;
      name?: string;
      url?: string;
      /** @enum {string} */
      type?: "WORDPRESS";
      woocommerceApiVersion?: string;
      wordpressApiVersion?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
    };
    UserEcommerceResponse: {
      /** Format: int32 */
      id?: number;
      user?: components["schemas"]["UserResponse"];
      ecommerce?: components["schemas"]["EcommerceResponse"];
    };
    CreateOrUpdateEcommerceRequest: {
      name: string;
      url: string;
      /** @enum {string} */
      type: "WORDPRESS";
      woocommerceApiVersion?: string;
      wordpressApiVersion?: string;
    };
    ApiResponseEcommerceResponse: {
      success?: boolean;
      data?: components["schemas"]["EcommerceResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    UserRegisterRequest: {
      email: string;
      password: string;
      name: string;
    };
    ApiResponseUserLoginResponse: {
      success?: boolean;
      data?: components["schemas"]["UserLoginResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    UserLoginResponse: {
      /** Format: int32 */
      id?: number;
      name?: string;
      email?: string;
      roles?: string;
      active?: boolean;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
      token?: string;
      /** Format: int64 */
      expiresIn?: number;
    };
    UserLoginRequest: {
      email: string;
      password: string;
    };
    DimensionsRequest: {
      length: string;
      width: string;
      height: string;
    };
    ImageRequest: {
      /** Format: int32 */
      id: number;
      name: string;
      src: string;
      alt?: string;
    };
    LinkToCategoryRequest: {
      /** Format: int32 */
      id: number;
    };
    LinkToTagRequest: {
      /** Format: int32 */
      id: number;
    };
    WooCommerceAttributeRequest: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      position?: number;
      visible?: boolean;
      variation?: boolean;
      options?: string[];
    };
    WooCommerceDefaultAttributeRequest: {
      /** Format: int32 */
      id: number;
      name: string;
      option: string;
    };
    WooCommerceDownloadRequest: {
      /** Format: int32 */
      id?: number;
      name: string;
      file: string;
    };
    WooCommerceMetaRequest: Record<string, never>;
    WooCommerceProductRequest: {
      /** Format: int32 */
      id?: number;
      name?: string;
      link?: string;
      type?: string;
      status?: string;
      description?: string;
      sku?: string;
      price?: string;
      slug?: string;
      permalink?: string;
      dateCreated?: string;
      dateCreatedGmt?: string;
      dateModified?: string;
      dateModifiedGmt?: string;
      featured?: boolean;
      catalogVisibility?: string;
      shortDescription?: string;
      regularPrice?: string;
      salePrice?: string;
      dateOnSaleFrom?: string;
      dateOnSaleFromGmt?: string;
      dateOnSaleTo?: string;
      dateOnSaleToGmt?: string;
      virtual?: boolean;
      downloadable?: boolean;
      downloads?: components["schemas"]["WooCommerceDownloadRequest"][];
      /** Format: int32 */
      downloadLimit?: number;
      /** Format: int32 */
      downloadExpiry?: number;
      externalUrl?: string;
      buttonText?: string;
      taxStatus?: string;
      taxClass?: string;
      manageStock?: boolean;
      /** Format: int32 */
      stockQuantity?: number;
      stockStatus?: string;
      backorders?: string;
      soldIndividually?: boolean;
      weight?: string;
      dimensions?: components["schemas"]["DimensionsRequest"];
      shippingClass?: string;
      reviewsAllowed?: boolean;
      upsellIds?: number[];
      crossSellIds?: number[];
      /** Format: int32 */
      parentId?: number;
      purchaseNote?: string;
      categories?: components["schemas"]["LinkToCategoryRequest"][];
      tags?: components["schemas"]["LinkToTagRequest"][];
      images?: components["schemas"]["ImageRequest"][];
      attributes?: components["schemas"]["WooCommerceAttributeRequest"][];
      defaultAttributes?: components["schemas"]["WooCommerceDefaultAttributeRequest"][];
      groupedProducts?: Record<string, never>[];
      /** Format: int32 */
      menuOrder?: number;
      metaData?: components["schemas"]["WooCommerceMetaRequest"][];
    };
    Ecommerce: {
      /** Format: int32 */
      id?: number;
      name?: string;
      url?: string;
      /** @enum {string} */
      type?: "WORDPRESS";
      woocommerceApiVersion?: string;
      wordpressApiVersion?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
      userEcommerces?: components["schemas"]["UserEcommerce"][];
      users?: components["schemas"]["User"][];
    };
    GrantedAuthority: {
      authority?: string;
    };
    User: {
      /** Format: int32 */
      id?: number;
      name?: string;
      email?: string;
      roles?: string;
      active?: boolean;
      /** Format: date-time */
      lastLoginAt?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
      userEcommerces?: components["schemas"]["UserEcommerce"][];
      ecommerces?: components["schemas"]["Ecommerce"][];
      authorities?: components["schemas"]["GrantedAuthority"][];
      username?: string;
      accountNonExpired?: boolean;
      accountNonLocked?: boolean;
      credentialsNonExpired?: boolean;
      enabled?: boolean;
    };
    UserEcommerce: {
      /** Format: int32 */
      id?: number;
      user?: components["schemas"]["User"];
      ecommerce?: components["schemas"]["Ecommerce"];
      apiPublic?: string;
      apiSecret?: string;
      appUsername?: string;
      appPassword?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
    };
    ApiResponseWooCommerceProductResponse: {
      success?: boolean;
      data?: components["schemas"]["WooCommerceProductResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    Category: {
      /** Format: int32 */
      id?: number;
      name?: string;
      slug?: string;
    };
    DimensionsResponse: {
      length?: string;
      width?: string;
      height?: string;
    };
    LinkItem: {
      href?: string;
    };
    Links: {
      self?: components["schemas"]["LinkItem"][];
      collection?: components["schemas"]["LinkItem"][];
    };
    WooCommerceAttributeResponse: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      position?: number;
      visible?: boolean;
      variation?: boolean;
      options?: string[];
    };
    WooCommerceDefaultAttributeResponse: {
      /** Format: int32 */
      id?: number;
      name?: string;
      option?: string;
    };
    WooCommerceDownloadResponse: {
      /** Format: int32 */
      id?: number;
      name?: string;
      file?: string;
    };
    WooCommerceImage: {
      /** Format: int32 */
      id?: number;
      src?: string;
      name?: string;
      alt?: string;
      createdAt?: string;
      createdAtGmt?: string;
      updatedAt?: string;
      updatedAtGmt?: string;
      dateCreated?: string;
      dateCreatedGmt?: string;
      dateModified?: string;
      dateModifiedGmt?: string;
    };
    WooCommerceMetaResponse: {
      /** Format: int32 */
      id?: number;
      name?: string;
      value?: string;
    };
    WooCommerceProductResponse: {
      /** Format: int32 */
      id?: number;
      name?: string;
      link?: string;
      type?: string;
      status?: string;
      description?: string;
      sku?: string;
      price?: string;
      createdAt?: string;
      createdAtGmt?: string;
      updatedAt?: string;
      updatedAtGmt?: string;
      slug?: string;
      permalink?: string;
      dateCreated?: string;
      dateCreatedGmt?: string;
      dateModified?: string;
      dateModifiedGmt?: string;
      featured?: boolean;
      catalogVisibility?: string;
      shortDescription?: string;
      regularPrice?: string;
      salePrice?: string;
      dateOnSaleFrom?: string;
      dateOnSaleFromGmt?: string;
      dateOnSaleTo?: string;
      dateOnSaleToGmt?: string;
      priceHtml?: string;
      onSale?: boolean;
      purchasable?: boolean;
      /** Format: int32 */
      totalSales?: number;
      virtual?: boolean;
      downloadable?: boolean;
      downloads?: components["schemas"]["WooCommerceDownloadResponse"][];
      /** Format: int32 */
      downloadLimit?: number;
      /** Format: int32 */
      downloadExpiry?: number;
      externalUrl?: string;
      buttonText?: string;
      taxStatus?: string;
      taxClass?: string;
      manageStock?: boolean;
      /** Format: int32 */
      stockQuantity?: number;
      stockStatus?: string;
      backorders?: string;
      backordersAllowed?: boolean;
      backordered?: boolean;
      soldIndividually?: boolean;
      weight?: string;
      dimensions?: components["schemas"]["DimensionsResponse"];
      shippingRequired?: boolean;
      shippingTaxable?: boolean;
      shippingClass?: string;
      /** Format: int32 */
      shippingClassId?: number;
      reviewsAllowed?: boolean;
      averageRating?: string;
      /** Format: int32 */
      ratingCount?: number;
      relatedIds?: number[];
      upsellIds?: number[];
      crossSellIds?: number[];
      /** Format: int32 */
      parentId?: number;
      purchaseNote?: string;
      categories?: components["schemas"]["Category"][];
      tags?: components["schemas"]["WooCommerceTagResponse"][];
      images?: components["schemas"]["WooCommerceImage"][];
      attributes?: components["schemas"]["WooCommerceDefaultAttributeResponse"][];
      defaultAttributes?: components["schemas"]["WooCommerceAttributeResponse"][];
      variations?: number[];
      groupedProducts?: Record<string, never>[];
      /** Format: int32 */
      menuOrder?: number;
      metaData?: components["schemas"]["WooCommerceMetaResponse"][];
      get_links?: components["schemas"]["Links"];
    };
    WooCommerceTagResponse: {
      /** Format: int32 */
      id?: number;
      name?: string;
      slug?: string;
    };
    WooCommerceProductVariationRequest: {
      /** Format: int32 */
      id?: number;
      sku?: string;
      regularPrice?: string;
      salePrice?: string;
      dateOnSaleFrom?: string;
      dateOnSaleFromGmt?: string;
      dateOnSaleTo?: string;
      dateOnSaleToGmt?: string;
      virtual?: boolean;
      downloadable?: boolean;
      downloads?: components["schemas"]["WooCommerceDownloadRequest"][];
      /** Format: int32 */
      downloadLimit?: number;
      /** Format: int32 */
      downloadExpiry?: number;
      taxStatus?: string;
      taxClass?: string;
      manageStock?: Record<string, never>;
      /** Format: int32 */
      stockQuantity?: number;
      stockStatus?: string;
      backorders?: string;
      soldIndividually?: boolean;
      weight?: string;
      dimensions?: components["schemas"]["DimensionsRequest"];
      shippingClass?: string;
      attributes?: components["schemas"]["WooCommerceDefaultAttributeRequest"][];
      /** Format: int32 */
      menuOrder?: number;
      description?: string;
      image?: string;
      metaData?: components["schemas"]["WooCommerceMetaRequest"][];
    };
    ApiResponseWooCommerceProductVariationResponse: {
      success?: boolean;
      data?: components["schemas"]["WooCommerceProductVariationResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    WooCommerceProductVariationResponse: {
      /** Format: int32 */
      id?: number;
      sku?: string;
      price?: string;
      regularPrice?: string;
      salePrice?: string;
      dateOnSaleFrom?: string;
      dateOnSaleTo?: string;
      onSale?: boolean;
      status?: string;
      description?: string;
      shortDescription?: string;
      manageStock?: Record<string, never>;
      /** Format: int32 */
      stockQuantity?: number;
      stockStatus?: string;
      visible?: boolean;
      virtual?: boolean;
      downloadable?: boolean;
      downloads?: components["schemas"]["WooCommerceDownloadResponse"][];
      /** Format: int32 */
      downloadLimit?: number;
      /** Format: int32 */
      downloadExpiry?: number;
      taxStatus?: string;
      taxClass?: string;
      shippingClass?: string;
      weight?: string;
      shippingClassId?: string;
      dimensions?: components["schemas"]["DimensionsResponse"];
      shippingRequired?: boolean;
      shippingTaxable?: boolean;
      shippingClassSlug?: string;
      backordersAllowed?: boolean;
      backordered?: boolean;
      backorders?: string;
      soldIndividually?: boolean;
      purchaseNote?: string;
      attributes?: components["schemas"]["WooCommerceDefaultAttributeResponse"][];
      menuOrder?: string;
      image?: components["schemas"]["WooCommerceImage"][];
      virtualDownloads?: number[];
      parentIsVisible?: boolean;
      parentIsPurchasable?: boolean;
      get_links?: components["schemas"]["Links"];
    };
    BatchWoocommerceProductVariationRequest: {
      create?: components["schemas"]["WooCommerceProductVariationRequest"][];
      update?: components["schemas"]["WooCommerceProductVariationRequest"][];
      delete?: number[];
    };
    ApiResponseBatchWooCommerceProductVariationResponse: {
      success?: boolean;
      data?: components["schemas"]["BatchWooCommerceProductVariationResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    BatchWooCommerceProductVariationResponse: {
      create?: components["schemas"]["WooCommerceProductVariationResponse"][];
      update?: components["schemas"]["WooCommerceProductVariationResponse"][];
      delete?: components["schemas"]["WooCommerceProductVariationResponse"][];
    };
    BatchWoocommerceProductRequest: {
      create?: components["schemas"]["WooCommerceProductRequest"][];
      update?: components["schemas"]["UpdateWoocommerceProductRequest"][];
      delete?: number[];
    };
    UpdateWoocommerceProductRequest: {
      /** Format: int32 */
      id: number;
      name?: string;
      link?: string;
      type?: string;
      status?: string;
      description?: string;
      sku?: string;
      price?: string;
      slug?: string;
      permalink?: string;
      dateCreated?: string;
      dateCreatedGmt?: string;
      dateModified?: string;
      dateModifiedGmt?: string;
      featured?: boolean;
      catalogVisibility?: string;
      shortDescription?: string;
      regularPrice?: string;
      salePrice?: string;
      dateOnSaleFrom?: string;
      dateOnSaleFromGmt?: string;
      dateOnSaleTo?: string;
      dateOnSaleToGmt?: string;
      virtual?: boolean;
      downloadable?: boolean;
      downloads?: components["schemas"]["WooCommerceDownloadRequest"][];
      /** Format: int32 */
      downloadLimit?: number;
      /** Format: int32 */
      downloadExpiry?: number;
      externalUrl?: string;
      buttonText?: string;
      taxStatus?: string;
      taxClass?: string;
      manageStock?: boolean;
      /** Format: int32 */
      stockQuantity?: number;
      stockStatus?: string;
      backorders?: string;
      soldIndividually?: boolean;
      weight?: string;
      dimensions?: components["schemas"]["DimensionsRequest"];
      shippingClass?: string;
      reviewsAllowed?: boolean;
      upsellIds?: number[];
      crossSellIds?: number[];
      /** Format: int32 */
      parentId?: number;
      purchaseNote?: string;
      categories?: components["schemas"]["LinkToCategoryRequest"][];
      tags?: components["schemas"]["LinkToTagRequest"][];
      images?: components["schemas"]["ImageRequest"][];
      attributes?: components["schemas"]["WooCommerceAttributeRequest"][];
      defaultAttributes?: components["schemas"]["WooCommerceDefaultAttributeRequest"][];
      groupedProducts?: Record<string, never>[];
      /** Format: int32 */
      menuOrder?: number;
      metaData?: components["schemas"]["WooCommerceMetaRequest"][];
    };
    ApiResponseBatchWoocommerceProductResponse: {
      success?: boolean;
      data?: components["schemas"]["BatchWoocommerceProductResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    BatchWoocommerceProductResponse: {
      create?: components["schemas"]["WooCommerceProductResponse"][];
      update?: components["schemas"]["WooCommerceProductResponse"][];
      delete?: components["schemas"]["WooCommerceProductResponse"][];
    };
    WooCommerceProductAttributeRequest: {
      /** Format: int32 */
      id?: number;
      name: string;
      slug?: string;
      orderBy?: string;
      hasArchives?: boolean;
    };
    ApiResponseWooCommerceProductAttributeResponse: {
      success?: boolean;
      data?: components["schemas"]["WooCommerceProductAttributeResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    WooCommerceProductAttributeResponse: {
      /** Format: int32 */
      id?: number;
      name?: string;
      slug?: string;
      type?: string;
      orderBy?: string;
      hasArchives?: boolean;
    };
    BatchWoocommerceProductAttributeRequest: {
      create?: components["schemas"]["WooCommerceProductAttributeRequest"][];
      update?: components["schemas"]["WooCommerceProductAttributeRequest"][];
      delete?: number[];
    };
    ApiResponseBatchWooCommerceProductAttributeResponse: {
      success?: boolean;
      data?: components["schemas"]["BatchWooCommerceProductAttributeResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    BatchWooCommerceProductAttributeResponse: {
      create?: components["schemas"]["WooCommerceProductAttributeResponse"][];
      update?: components["schemas"]["WooCommerceProductAttributeResponse"][];
      delete?: components["schemas"]["WooCommerceProductAttributeResponse"][];
    };
    CreateWordpressMediaRequest: {
      title?: string;
      caption?: string;
      description?: string;
      altText?: string;
      /** Format: int32 */
      post?: number;
      status?: string;
    };
    ApiResponseWordpressMediaResponse: {
      success?: boolean;
      data?: components["schemas"]["WordpressMediaResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    Rendered: {
      rendered?: string;
      get_protected?: boolean;
    };
    WordpressMediaResponse: {
      /** Format: int32 */
      id?: number;
      date?: string;
      dateGmt?: string;
      modified?: string;
      modifiedGmt?: string;
      guid?: components["schemas"]["Rendered"];
      title?: components["schemas"]["Rendered"];
      caption?: components["schemas"]["Rendered"];
      description?: components["schemas"]["Rendered"];
      link?: string;
      slug?: string;
      status?: string;
      type?: string;
      permalinkTemplate?: string;
      generatedSlug?: string;
      /** Format: int32 */
      author?: number;
      commentStatus?: string;
      pingStatus?: string;
      meta?: Record<string, never>[];
      template?: string;
      altText?: string;
      mediaType?: string;
      mimeType?: string;
      mediaDetails?: Record<string, never>[];
      /** Format: int32 */
      post?: number;
      sourceUrl?: string;
      missingImageSizes?: string[];
      createdAt?: string;
      updatedAt?: string;
      createdAtGmt?: string;
      updatedAtGmt?: string;
    };
    CreateUserRequest: {
      name: string;
      roles: string;
      active: boolean;
      email: string;
      password: string;
    };
    PatchUserRequest: {
      name?: string;
      roles?: string;
      active?: boolean;
    };
    PatchUserEcommerceRequest: {
      /** Format: int32 */
      userId?: number;
      /** Format: int32 */
      ecommerceId?: number;
      apiPublic?: string;
      apiSecret?: string;
      appUsername?: string;
      appPassword?: string;
    };
    PatchEcommerceRequest: {
      name?: string;
      url?: string;
      /** @enum {string} */
      type?: "WORDPRESS";
      woocommerceApiVersion?: string;
      wordpressApiVersion?: string;
    };
    IndexRequest: {
      /** Format: int32 */
      page?: number;
      /** Format: int32 */
      perPage?: number;
      fields?: string;
      search?: string;
      searchFields?: string[];
    };
    ApiResponsePageWooCommerceProductResponse: {
      success?: boolean;
      data?: components["schemas"]["PageWooCommerceProductResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    PageWooCommerceProductResponse: {
      items?: components["schemas"]["WooCommerceProductResponse"][];
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      itemsInPage?: number;
      /** Format: int32 */
      totalItems?: number;
      /** Format: int32 */
      totalPages?: number;
    };
    ApiResponsePageWooCommerceProductVariationResponse: {
      success?: boolean;
      data?: components["schemas"]["PageWooCommerceProductVariationResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    PageWooCommerceProductVariationResponse: {
      items?: components["schemas"]["WooCommerceProductVariationResponse"][];
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      itemsInPage?: number;
      /** Format: int32 */
      totalItems?: number;
      /** Format: int32 */
      totalPages?: number;
    };
    ApiResponsePageWooCommerceProductAttributeResponse: {
      success?: boolean;
      data?: components["schemas"]["PageWooCommerceProductAttributeResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    PageWooCommerceProductAttributeResponse: {
      items?: components["schemas"]["WooCommerceProductAttributeResponse"][];
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      itemsInPage?: number;
      /** Format: int32 */
      totalItems?: number;
      /** Format: int32 */
      totalPages?: number;
    };
    ApiResponsePageWordpressMediaResponse: {
      success?: boolean;
      data?: components["schemas"]["PageWordpressMediaResponse"];
      message?: string;
      errors?: Record<string, never>;
    };
    PageWordpressMediaResponse: {
      items?: components["schemas"]["WordpressMediaResponse"][];
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      itemsInPage?: number;
      /** Format: int32 */
      totalItems?: number;
      /** Format: int32 */
      totalPages?: number;
    };
    ApiResponseListUserResponse: {
      success?: boolean;
      data?: components["schemas"]["UserResponse"][];
      message?: string;
      errors?: Record<string, never>;
    };
    ApiResponseListUserEcommerceResponse: {
      success?: boolean;
      data?: components["schemas"]["UserEcommerceResponse"][];
      message?: string;
      errors?: Record<string, never>;
    };
    ApiResponseListEcommerceResponse: {
      success?: boolean;
      data?: components["schemas"]["EcommerceResponse"][];
      message?: string;
      errors?: Record<string, never>;
    };
    DeleteRequest: {
      force?: boolean;
    };
    ApiResponseBoolean: {
      success?: boolean;
      data?: boolean;
      message?: string;
      errors?: Record<string, never>;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  getUserById: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        userId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseUserResponse"];
        };
      };
    };
  };
  updateUser: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        userId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUserRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseUserResponse"];
        };
      };
    };
  };
  deleteUser: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        userId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseBoolean"];
        };
      };
    };
  };
  patchUser: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        userId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchUserRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseUserResponse"];
        };
      };
    };
  };
  updateEcommerce: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        EcommerceId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateOrUpdateUserEcommerceRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseUserEcommerceResponse"];
        };
      };
    };
  };
  deleteEcommerce: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        EcommerceId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseBoolean"];
        };
      };
    };
  };
  patchEcommerce: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        EcommerceId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchUserEcommerceRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseUserEcommerceResponse"];
        };
      };
    };
  };
  updateEcommerce_1: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        EcommerceId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateOrUpdateEcommerceRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseEcommerceResponse"];
        };
      };
    };
  };
  deleteEcommerce_1: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        EcommerceId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseBoolean"];
        };
      };
    };
  };
  patchEcommerce_1: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        EcommerceId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchEcommerceRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseEcommerceResponse"];
        };
      };
    };
  };
  register: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRegisterRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseUserLoginResponse"];
        };
      };
    };
  };
  authenticate: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserLoginRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseUserLoginResponse"];
        };
      };
    };
  };
  index: {
    parameters: {
      query: {
        request: components["schemas"]["IndexRequest"];
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponsePageWooCommerceProductResponse"];
        };
      };
    };
  };
  create: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WooCommerceProductRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseWooCommerceProductResponse"];
        };
      };
    };
  };
  index_1: {
    parameters: {
      query: {
        request: components["schemas"]["IndexRequest"];
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        productId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponsePageWooCommerceProductVariationResponse"];
        };
      };
    };
  };
  create_1: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        productId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WooCommerceProductVariationRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseWooCommerceProductVariationResponse"];
        };
      };
    };
  };
  batch: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        productId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BatchWoocommerceProductVariationRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseBatchWooCommerceProductVariationResponse"];
        };
      };
    };
  };
  batch_1: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BatchWoocommerceProductRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseBatchWoocommerceProductResponse"];
        };
      };
    };
  };
  index_2: {
    parameters: {
      query: {
        request: components["schemas"]["IndexRequest"];
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponsePageWooCommerceProductAttributeResponse"];
        };
      };
    };
  };
  create_2: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WooCommerceProductAttributeRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseWooCommerceProductAttributeResponse"];
        };
      };
    };
  };
  batch_2: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BatchWoocommerceProductAttributeRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseBatchWooCommerceProductAttributeResponse"];
        };
      };
    };
  };
  index_3: {
    parameters: {
      query: {
        request: components["schemas"]["IndexRequest"];
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponsePageWordpressMediaResponse"];
        };
      };
    };
  };
  create_3: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: {
      content: {
        "multipart/form-data": {
          request?: components["schemas"]["CreateWordpressMediaRequest"];
          userEcommerce?: components["schemas"]["UserEcommerce"];
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseWordpressMediaResponse"];
        };
      };
    };
  };
  getAllUsers: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseListUserResponse"];
        };
      };
    };
  };
  addNewUser: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUserRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseUserResponse"];
        };
      };
    };
  };
  getAllEcommerces: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseListUserEcommerceResponse"];
        };
      };
    };
  };
  addNewEcommerce: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateOrUpdateUserEcommerceRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseUserEcommerceResponse"];
        };
      };
    };
  };
  getAllEcommerces_1: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseListEcommerceResponse"];
        };
      };
    };
  };
  addNewEcommerce_1: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateOrUpdateEcommerceRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseEcommerceResponse"];
        };
      };
    };
  };
  show: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        productId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseWooCommerceProductResponse"];
        };
      };
    };
  };
  delete: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        productId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DeleteRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseBoolean"];
        };
      };
    };
  };
  patch: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        productId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WooCommerceProductRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseWooCommerceProductResponse"];
        };
      };
    };
  };
  show_1: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        productId: number;
        variationId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseWooCommerceProductVariationResponse"];
        };
      };
    };
  };
  delete_1: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        productId: number;
        variationId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DeleteRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseBoolean"];
        };
      };
    };
  };
  patch_1: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        productId: number;
        variationId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WooCommerceProductVariationRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseWooCommerceProductVariationResponse"];
        };
      };
    };
  };
  show_2: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        attributeId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseWooCommerceProductAttributeResponse"];
        };
      };
    };
  };
  delete_2: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        attributeId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseBoolean"];
        };
      };
    };
  };
  patch_2: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        attributeId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WooCommerceProductAttributeRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseWooCommerceProductAttributeResponse"];
        };
      };
    };
  };
  show_3: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        productId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseWordpressMediaResponse"];
        };
      };
    };
  };
  delete_3: {
    parameters: {
      query: {
        userEcommerce: components["schemas"]["UserEcommerce"];
      };
      header?: never;
      path: {
        productId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseBoolean"];
        };
      };
    };
  };
  getEcommerceById: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        ecommerceId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseUserEcommerceResponse"];
        };
      };
    };
  };
  getEcommerceById_1: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        ecommerceId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiResponseEcommerceResponse"];
        };
      };
    };
  };
}
